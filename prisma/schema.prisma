// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
    binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id String @db.VarChar(100) @id @default(uuid())
  name String? @db.VarChar(100)
  email String @unique @db.VarChar(100)
  firebase_id String @db.VarChar(100)
  telp String? @unique @db.VarChar(20)
  photo_url String?  @db.Text
  created_at DateTime @db.Timestamptz() @default(now())
  updated_at DateTime @db.Timestamptz() @default(now())
  device UserDevice[]
  @@map("users")
}

model Device{
  id String @db.VarChar(100) @default(uuid())
  device_id String @unique @db.VarChar(100)
  mqtt_topic String @db.VarChar(100)
  mqtt_base_url String @db.VarChar(100)
  users UserDevice[]
  log Log[]
  @@id([id])
  @@map("devices")
}

model UserDevice{
  id String @db.VarChar(100) @unique @default(uuid())
  user_id String @db.VarChar(100)
  device_id String @db.VarChar(100)
  user User @relation(fields: [user_id], references: [id])
  device Device @relation(fields: [device_id], references: [id])
  @@id([id])
  @@map("user_devices")
  device_detail DeviceDetail?
}


model DeviceDetail{
  id String @db.VarChar(100) @id @default(uuid())
  device_id String @db.VarChar(100) 
  name String @db.VarChar(100)
  province String @db.VarChar(100)
  district String @db.VarChar(100)
  city String @db.VarChar(100)
  address String @db.VarChar(100)
  water_source String @db.VarChar(100)
  user_device UserDevice @relation(fields: [user_device_id],references: [id])
  user_device_id String @unique
  @@map("device_details")

}


model Log{
  id String @db.VarChar(100) @id @default(uuid())
  ph Float 
  tds Float
  created_at DateTime @db.Timestamptz() @default(now())
  device Device @relation(fields: [device_id], references: [id])
  device_id String
  @@map("logs")
}


model WaterSupplier{
  id String @db.VarChar(100) @id @default(uuid())
  id_user_water_supplier String @unique @db.VarChar(100)
  userWaterSupplier UserWaterSupplier @relation(fields: [id_user_water_supplier], references: [id])
  name String @db.VarChar(100)
  category String? @db.VarChar(100)
  phone String? @unique @db.VarChar(15)
  detail_location String @db.Text
  image_url String @db.VarChar(100)
  latitude Float @db.DoublePrecision
  longitude Float @db.DoublePrecision
  @@map("water_suppliers")
}

model WaterFilter {
  id             String    @id @default(uuid()) @db.VarChar(100)
  name           String    @db.VarChar(100)
  price          BigInt    @db.BigInt
  rating         Float
  description    String    @db.Text
  tokopedia_url  String?   @unique @db.VarChar(100)
  shoppe_url     String?   @unique @db.VarChar(100)
  image_url      String    @db.VarChar(100)
  @@map("water_filters")
}

model UserWaterSupplier{
  id String @id @db.VarChar(100)
  email String @unique @db.VarChar(100)
  created_at DateTime @db.Timestamp() @default(now())
  updated_at DateTime @db.Timestamp() @default(now())
  water_supplier WaterSupplier?
  @@map("user_water_suppliers")
}

model WaterSupplierLog{
  id String @id @db.VarChar(100) @default(uuid())
  ph Float
  tds Float
  datetime DateTime
  @@map("water_supplier_logs")
}


